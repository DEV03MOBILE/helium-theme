/*!
 * Copyright (c) 2008-2020 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@mixin he-textfield($primary-stylename: v-textfield) {
  .#{$primary-stylename} {
    @include he-input-style();
  }

  .#{$primary-stylename}-readonly {
    @include he-input-readonly-style();
  }

  .#{$primary-stylename}.v-disabled {
    @include he-input-disabled-style();
  }

  .#{$primary-stylename}.c-disabled-or-readonly.c-empty-value {
    color: transparent;
  }

  .#{$primary-stylename}-error,
  .#{$primary-stylename}-error-error {
    @include he-input-error-style();
  }

  /* Global size */

  &.small .#{$primary-stylename} {
    @include he-input-size-style($unit-size: $v-unit-size--small, $font-size: $v-font-size--small);
  }

  &.large .#{$primary-stylename} {
    @include he-input-size-style($unit-size: $v-unit-size--large, $font-size: $v-font-size--large);
  }

  /* Size within a container */

  .small .#{$primary-stylename} {
    @include he-input-size-style($unit-size: $v-unit-size--small, $font-size: $v-font-size--small);
  }

  .middle .#{$primary-stylename} {
    @include he-input-size-style($unit-size: $v-unit-size, $font-size: $v-font-size);
  }

  .large .#{$primary-stylename} {
    @include he-input-size-style($unit-size: $v-unit-size--large, $font-size: $v-font-size--large);
  }

  /* Own size */

  .#{$primary-stylename}.small {
    @include he-input-size-style($unit-size: $v-unit-size--small, $font-size: $v-font-size--small);
  }

  .#{$primary-stylename}.middle {
    @include he-input-size-style($unit-size: $v-unit-size, $font-size: $v-font-size);
  }

  .#{$primary-stylename}.large {
    @include he-input-size-style($unit-size: $v-unit-size--large, $font-size: $v-font-size--large);
  }
}

@mixin he-input-size-style($unit-size : $v-unit-size,
                           $padding   : null,
                           $font-size : null) {
  font-size: $font-size;
  height: $unit-size;

  @if type-of($padding) == number or type-of($padding) == list {
    padding: $padding;
  } @else {
    $padding-height: ceil($unit-size/6);
    $padding-width: ceil($unit-size/3);
    padding: $padding-height $padding-width;
  }
}

@mixin he-input-style() {
  @include he-input-size-style();

  border: he-border();
  color: var(--text-color);
  background: var(--textfield-background-color);

  &::placeholder {
    color: var(--text-disabled-color);
  }

  &:focus {
    @include he-focus-style();
  }
}

@mixin he-input-readonly-style() {
  color: var(--text-medium-color);
  border-color: var(--read-only-border-color);
  background: var(--read-only-color);

  &:focus {
    @include he-focus-style(--read-only-focused-border-color);
  }
}

@mixin he-input-disabled-style() {
  @include he-input-readonly-style();

  color: var(--text-disabled-color);
}

@mixin he-input-error-style() {
  border-color: var(--error-color) !important;
  background: var(--textfield-background-color);
  color: var(--text-medium-color);

  &:focus {
    @include he-focus-style(--error-color);
  }
}